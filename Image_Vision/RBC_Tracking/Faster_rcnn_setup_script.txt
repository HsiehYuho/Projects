@Test environment
Client: mac os
Server: paris.seas.upenn.edu

Install anaconda:
@server 
wget https://repo.continuum.io/archive/Anaconda2-5.1.0-Linux-x86_64.sh #download the link file from anaconda website
bash Anaconda-2.x.x-Linux-x86[_64].sh


#Create the python virtual environemnt before the following installation  

#Follow https://github.com/chenyuntc/simple-faster-rcnn-pytorch bullet point 3 to install dependecy (install pytorch, cupy, requirements.txt)

#Be able to use different environment in Jupyter notebook
@server - setup
conda install nb_conda_kernels
python -m ipykernel install --user --name myenv --display-name "Python (myenv)"

@server - activate jupyter
jupyter-notebook --no-browser --port=8889

@client
ssh -N -L localhost:8888:localhost:8889 yhhsieh@paris.seas.upenn.edu

@client - open website 
localhost:8888

#At first time you can using the token display on the terminal to create password for future use
@download & upload file
# download: remote -> local
scp user@remote_host:remote_file local_file
# upload: local -> remote
scp local_file user@remote_host:remote_file

#Trouble shouting
-If appear resource limit exceed error 
	-> the resource.setrlimit(resource, limits) set limit too high
	use the following command to show the upper limit and reset it 
	(in my experience 1024 or 4096 can be executed on Paris server)
	ulimit -n
 	ulimit -n -H

-If appear connection fails such as socket etc, run the following command to start the visdom server
	nohup python3 -m visdom.server &

#Using vscode for client developing
ssh -R 52698:localhost:52698 YOUR_SEAS@paris.seas.upenn.edu

#Start training, if you do not download caffe
python3 train.py train --env='fasterrcnn-caffe' --plot-every=100 --caffe-pretrain=False

#I have save all log record in checkpoints folder and the intermediate train model

#When pushing the data to the server, the ImageSets/Main/ folder needs to have trainval.txt and test.txt files
